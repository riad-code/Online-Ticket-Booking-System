@model IEnumerable<ONLINE_TICKET_BOOKING_SYSTEM.Models.Event.EventItem>
@{
    ViewData["Title"] = "Events";
    Func<DateTime?, string> fmt = d => d.HasValue ? d.Value.ToLocalTime().ToString("ddd, dd MMM yyyy") : "-";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<style>
    .brand-green {
        color: #1dbf73
    }

    .btn-brand {
        background-color: #1dbf73;
        border-color: #1dbf73;
        color: #fff
    }

        .btn-brand:hover {
            filter: brightness(.95);
            color: #fff
        }

    .filter-bar {
        background: #f8fffb;
        border: 1px solid #e3f5ec;
        border-radius: .75rem
    }

    .event-card {
        border: 1px solid #eef3f1;
        border-radius: 1rem;
        overflow: hidden;
        transition: transform .18s,box-shadow .18s;
        background: #fff
    }

        .event-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0,0,0,.08)
        }

    .event-cover {
        width: 100%;
        height: 180px;
        object-fit: cover;
        background: #f2f2f2
    }

    .badge-featured {
        background: #ffe9b0;
        color: #996800
    }

    .badge-soldout {
        background: #ffe1e1;
        color: #a30000
    }

    .badge-category {
        background: #eaf9f2;
        color: #1dbf73
    }

    .small-muted {
        color: #6c757d;
        font-size: .9rem
    }

    .empty-state {
        border: 2px dashed #dfeee7;
        border-radius: 1rem;
        padding: 2rem;
        text-align: center;
        color: #6c757d;
        background: #fcfffd
    }

    .pagination .page-link {
        color: #1dbf73
    }

    .pagination .page-item.active .page-link {
        background-color: #1dbf73;
        border-color: #1dbf73
    }
</style>

<div class="container py-4">
    <div class="d-flex flex-column flex-lg-row align-items-lg-center justify-content-between mb-3 gap-2">
        <div>
            <h2 class="mb-0 fw-bold">Discover Events</h2>
            <div class="small-muted">Find concerts, exhibitions, conferences and more.</div>
        </div>

      
    </div>

    <div class="filter-bar p-3 mb-4">
        <div class="row g-2">
            <div class="col-12 col-lg-4">
                <div class="input-group">
                    <span class="input-group-text bg-white"><i class="bi bi-search"></i></span>
                    <input id="q" type="text" class="form-control" placeholder="Search by event, venue, city…" />
                </div>
            </div>
            <div class="col-6 col-lg-2">
                <select id="city" class="form-select">
                    <option value="">All Cities</option>
                    @foreach (var city in (Model ?? Enumerable.Empty<ONLINE_TICKET_BOOKING_SYSTEM.Models.Event.EventItem>())
                                        .Select(x => x.City ?? "").Where(x => !string.IsNullOrWhiteSpace(x)).Distinct().OrderBy(x => x))
                    {
                        <option value="@city">@city</option>
                    }
                </select>
            </div>
            <div class="col-6 col-lg-2">
                <select id="category" class="form-select">
                    <option value="">All Categories</option>
                    @foreach (var cat in (Model ?? Enumerable.Empty<ONLINE_TICKET_BOOKING_SYSTEM.Models.Event.EventItem>())
                                        .Select(x => x.Category ?? "").Where(x => !string.IsNullOrWhiteSpace(x)).Distinct().OrderBy(x => x))
                    {
                        <option value="@cat">@cat</option>
                    }
                </select>
            </div>
            <div class="col-6 col-lg-2"><input id="dateFrom" type="date" class="form-control" /></div>
            <div class="col-6 col-lg-2"><input id="dateTo" type="date" class="form-control" /></div>
        </div>
        <div class="d-flex align-items-center justify-content-between mt-3">
            <div class="small-muted">
                <span id="shownCount">0</span> of <span id="totalCount">@((Model ?? Enumerable.Empty<ONLINE_TICKET_BOOKING_SYSTEM.Models.Event.EventItem>()).Count())</span> events
            </div>
            <div class="d-flex gap-2">
                <select id="sort" class="form-select form-select-sm" style="width: 200px;">
                    <option value="dateAsc">Sort: Date (Earliest)</option>
                    <option value="dateDesc">Sort: Date (Latest)</option>
                    <option value="priceAsc">Sort: Price (Low → High)</option>
                    <option value="priceDesc">Sort: Price (High → Low)</option>
                </select>
                <select id="pageLength" class="form-select form-select-sm" style="width: 120px;">
                    <option value="12" selected>12 / page</option>
                    <option value="24">24 / page</option>
                    <option value="48">48 / page</option>
                </select>
            </div>
        </div>
    </div>

    <div id="grid" class="row g-3">
        @foreach (var e in Model ?? Enumerable.Empty<ONLINE_TICKET_BOOKING_SYSTEM.Models.Event.EventItem>())
        {
            var start = e.StartDateUtc?.ToLocalTime();
            var price = e.PriceFrom ?? 0m;
            var isSold = (e.AvailableTickets ?? 0) <= 0;
            <div class="col-12 col-sm-6 col-lg-4 col-xl-3 event-item"
                 data-title="@((e.Title ?? "").ToLowerInvariant())"
                 data-city="@((e.City ?? "").ToLowerInvariant())"
                 data-category="@((e.Category ?? "").ToLowerInvariant())"
                 data-date="@((start?.ToString("yyyy-MM-dd") ?? ""))"
                 data-price="@price">
                <div class="event-card h-100 d-flex flex-column">
                    <div class="position-relative">
                        <img class="event-cover" src="@(string.IsNullOrWhiteSpace(e.CoverImageUrl) ? "/images/placeholders/event-cover.jpg" : e.CoverImageUrl)"
                             alt="@e.Title" loading="lazy" />
                        @if (e.IsFeatured)
                        {
                            <span class="badge badge-featured position-absolute top-0 start-0 m-2 px-2 py-1"><i class="bi bi-star-fill me-1"></i> Featured</span>
                        }
                        @if (isSold)
                        {
                            <span class="badge badge-soldout position-absolute top-0 end-0 m-2 px-2 py-1">Sold Out</span>
                        }
                    </div>
                    <div class="p-3 d-flex flex-column flex-grow-1">
                        <div class="d-flex justify-content-between align-items-start gap-2 mb-2">
                            <h5 class="mb-0 fw-semibold" title="@e.Title">@e.Title</h5>
                            @if (!string.IsNullOrWhiteSpace(e.Category))
                            {
                                <span class="badge badge-category">@e.Category</span>
                            }
                        </div>
                        <div class="small-muted mb-2"><i class="bi bi-geo-alt me-1"></i>@(string.IsNullOrWhiteSpace(e.Venue) ? e.City : $"{e.Venue}, {e.City}")</div>
                        <div class="small-muted mb-3"><i class="bi bi-calendar-event me-1"></i>@fmt(start)</div>
                        <div class="mt-auto d-flex align-items-center justify-content-between">
                            <div class="fw-bold brand-green">@((e.Currency ?? "৳")) @price.ToString("0.##") <span class="small-muted fw-normal">from</span></div>
                            <a asp-controller="Events" asp-action="Details" asp-route-id="@e.Id" class="btn btn-sm btn-brand @(isSold ? "disabled" : "")">
                                @(isSold ? "Sold Out" : "Buy Tickets")
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div id="empty" class="empty-state mt-4 d-none">
        <i class="bi bi-emoji-frown fs-3 d-block mb-2"></i>
        No events found for your filters.
        <div class="mt-2">
            <button id="clearFilters" class="btn btn-outline-success btn-sm">Clear filters</button>
        </div>
    </div>

    <nav class="mt-4 d-flex justify-content-center">
        <ul id="pager" class="pagination mb-0"></ul>
    </nav>
</div>

@section Scripts {
    <script>
        (function () {
            const $grid=$('#grid'),$items=$grid.find('.event-item'),$shown=$('#shownCount'),$empty=$('#empty'),$pager=$('#pager');
            const $q=$('#q'),$city=$('#city'),$category=$('#category'),$dateFrom=$('#dateFrom'),$dateTo=$('#dateTo'),$sort=$('#sort'),$pageLength=$('#pageLength');
            const state={q:'',city:'',category:'',dateFrom:'',dateTo:'',sort:'dateAsc',pageLength:12,page:1};
            function toDate(v){return v?new Date(v+'T00:00:00'):null}function norm(s){return (s||'').toString().trim().toLowerCase()}
            function apply(){
                const q=norm(state.q),city=norm(state.city),cat=norm(state.category),df=toDate(state.dateFrom),dt=toDate(state.dateTo);
                let arr=$items.toArray().filter(el=>{
                    const $el=$(el),t=$el.data('title'),c=$el.data('city'),g=$el.data('category'),d=$el.data('date');
                    if(q && !(t.includes(q)||c.includes(q)||g.includes(q))) return false;
                    if(city && c!==city) return false;
                    if(cat && g!==cat) return false;
                    if(df||dt){ if(!d) return false; const dd=new Date(d+'T00:00:00'); if(df&&dd<df) return false; if(dt&&dd>dt) return false; }
                    return true;
                });
                arr.sort((a,b)=>{
                    const da=$(a).data('date')?new Date($(a).data('date')+'T00:00:00').getTime():0;
                    const db=$(b).data('date')?new Date($(b).data('date')+'T00:00:00').getTime():0;
                    const pa=parseFloat($(a).data('price'))||0, pb=parseFloat($(b).data('price'))||0;
                    switch(state.sort){case'dateAsc':return da-db;case'dateDesc':return db-da;case'priceAsc':return pa-pb;case'priceDesc':return pb-pa;default:return 0;}
                });
                const ps=state.pageLength,total=arr.length,tp=Math.max(1,Math.ceil(total/ps)); if(state.page>tp) state.page=tp;
                $items.hide(); const st=(state.page-1)*ps, en=st+ps; arr.slice(st,en).forEach(el=>$(el).show());
                $('#totalCount').text($items.length); $shown.text(arr.slice(st,en).length); $empty.toggleClass('d-none', total>0); renderPager(tp);
            }
            function renderPager(tp){
                const p=state.page; let h=''; const mk=(n,t,dis,act)=>`<li class="page-item ${dis?'disabled':''} ${act?'active':''}"><a class="page-link" href="#" data-page="${n}">${t}</a></li>`;
                h+=mk(Math.max(1,p-1),'&laquo;',p===1,false); const w=3,s=Math.max(1,p-w),e=Math.min(tp,p+w); for(let i=s;i<=e;i++) h+=mk(i,i,false,i===p);
                h+=mk(Math.min(tp,p+1),'&raquo;',p===tp,false); $pager.html(h);
            }
            $pager.on('click','a.page-link',e=>{e.preventDefault();const pg=+$(e.currentTarget).data('page'); if(!isNaN(pg)){state.page=pg;apply();}});
            $q.on('input',()=>{state.q=$q.val();state.page=1;apply();}); $city.on('change',()=>{state.city=$city.val();state.page=1;apply();});
            $category.on('change',()=>{state.category=$category.val();state.page=1;apply();});
            $dateFrom.on('change',()=>{state.dateFrom=$dateFrom.val();state.page=1;apply();});
            $dateTo.on('change',()=>{state.dateTo=$dateTo.val();state.page=1;apply();});
            $sort.on('change',()=>{state.sort=$sort.val();state.page=1;apply();});
            $pageLength.on('change',()=>{state.pageLength=parseInt($pageLength.val(),10)||12;state.page=1;apply();});
            $('#clearFilters').on('click',()=>{ $q.val('');$city.val('');$category.val('');$dateFrom.val('');$dateTo.val(''); Object.assign(state,{q:'',city:'',category:'',dateFrom:'',dateTo:'',page:1}); apply(); });
            $('#totalCount').text($('.event-item').length); apply();
        })();
    </script>
}
